// <auto-generated />
using System;
using MailerWeb.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MailerWeb.Server.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0-preview5.19227.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MailerWeb.Shared.Models.ConnectionConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ImapConfigurationId");

                    b.Property<int>("SmtpConfigurationId");

                    b.HasKey("Id");

                    b.HasIndex("ImapConfigurationId");

                    b.HasIndex("SmtpConfigurationId");

                    b.ToTable("ConnectionConfigurations");
                });

            modelBuilder.Entity("MailerWeb.Shared.Models.EmailDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConnectionConfigurationId");

                    b.Property<string>("Domain")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ConnectionConfigurationId");

                    b.ToTable("EmailDomain");
                });

            modelBuilder.Entity("MailerWeb.Shared.Models.EncryptedPassword", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("EncryptedPassword");
                });

            modelBuilder.Entity("MailerWeb.Shared.Models.ImapConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<int>("Port");

                    b.HasKey("Id");

                    b.ToTable("ImapConfiguration");
                });

            modelBuilder.Entity("MailerWeb.Shared.Models.Signature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("SignatureText")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Signature");
                });

            modelBuilder.Entity("MailerWeb.Shared.Models.SmtpConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<int>("Port");

                    b.HasKey("Id");

                    b.ToTable("SmtpConfiguration");
                });

            modelBuilder.Entity("MailerWeb.Shared.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConnectionSettingsId");

                    b.Property<string>("Login");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.HasIndex("ConnectionSettingsId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MailerWeb.Shared.Models.ConnectionConfiguration", b =>
                {
                    b.HasOne("MailerWeb.Shared.Models.ImapConfiguration", "ImapConfiguration")
                        .WithMany()
                        .HasForeignKey("ImapConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MailerWeb.Shared.Models.SmtpConfiguration", "SmtpConfiguration")
                        .WithMany()
                        .HasForeignKey("SmtpConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MailerWeb.Shared.Models.EmailDomain", b =>
                {
                    b.HasOne("MailerWeb.Shared.Models.ConnectionConfiguration", null)
                        .WithMany("DomainsList")
                        .HasForeignKey("ConnectionConfigurationId");
                });

            modelBuilder.Entity("MailerWeb.Shared.Models.EncryptedPassword", b =>
                {
                    b.HasOne("MailerWeb.Shared.Models.User", null)
                        .WithMany("EncryptedPasswords")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MailerWeb.Shared.Models.Signature", b =>
                {
                    b.HasOne("MailerWeb.Shared.Models.User", null)
                        .WithMany("Signatures")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MailerWeb.Shared.Models.User", b =>
                {
                    b.HasOne("MailerWeb.Shared.Models.ConnectionConfiguration", "ConnectionSettings")
                        .WithMany()
                        .HasForeignKey("ConnectionSettingsId");
                });
#pragma warning restore 612, 618
        }
    }
}
