// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MailerWeb.DAL;

namespace MailerWeb.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20190322175318_initfix")]
    partial class initfix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MailerWeb.Models.ImapConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<int>("Port");

                    b.Property<bool>("Ssl");

                    b.HasKey("Id");

                    b.ToTable("ImapConfigurations");
                });

            modelBuilder.Entity("MailerWeb.Models.Settings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Localization");

                    b.Property<bool>("Notifications");

                    b.Property<string>("Theme");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("MailerWeb.Models.Signature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("SignatureText");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Signature");
                });

            modelBuilder.Entity("MailerWeb.Models.SmtpConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<int>("Port");

                    b.Property<bool>("Ssl");

                    b.HasKey("Id");

                    b.ToTable("SmtpConfigurations");
                });

            modelBuilder.Entity("MailerWeb.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ImapSettingsId");

                    b.Property<string>("Login");

                    b.Property<string>("Name");

                    b.Property<string>("Nickname");

                    b.Property<string>("Password");

                    b.Property<int?>("SettingsId");

                    b.Property<int?>("SmtpSettingsId");

                    b.HasKey("Id");

                    b.HasIndex("ImapSettingsId");

                    b.HasIndex("SettingsId");

                    b.HasIndex("SmtpSettingsId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MailerWeb.Models.Signature", b =>
                {
                    b.HasOne("MailerWeb.Models.User")
                        .WithMany("Signatures")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MailerWeb.Models.User", b =>
                {
                    b.HasOne("MailerWeb.Models.ImapConfiguration", "ImapSettings")
                        .WithMany()
                        .HasForeignKey("ImapSettingsId");

                    b.HasOne("MailerWeb.Models.Settings", "Settings")
                        .WithMany()
                        .HasForeignKey("SettingsId");

                    b.HasOne("MailerWeb.Models.SmtpConfiguration", "SmtpSettings")
                        .WithMany()
                        .HasForeignKey("SmtpSettingsId");
                });
#pragma warning restore 612, 618
        }
    }
}
